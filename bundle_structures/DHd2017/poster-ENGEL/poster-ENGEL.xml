<?xml version="1.0" encoding="utf-8"?>
<TEI xml:id="poster-ENGEL" xmlns="http://www.tei-c.org/ns/1.0">
<teiHeader>
<fileDesc>
<titleStmt>
<title>maus - eine WebApp zur einfachen Erstellung funktionaler Webdokumente</title>
<author>
<persName>
<surname>Dufner</surname>
<forename>Matthias</forename>
</persName>
<affiliation>Hochschule Mainz, Deutschland</affiliation>
<email>matthias.dufner@hs-mainz.de</email>
</author>
<author>
<persName>
<surname>Kunz</surname>
<forename>Axel</forename>
</persName>
<affiliation>Hochschule Mainz, Deutschland</affiliation>
<email>axel.kunz@hs-mainz.de</email>
</author>
<author>
<persName>
<surname>Klammt</surname>
<forename>Anne</forename>
</persName>
<affiliation>Mainzer Zentrum für Digitalität in den Geistes- und Kulturwissenschaften (mainzed), Deutschland</affiliation>
<email>klammt@mainzed.org</email>
</author>
</titleStmt>
<editionStmt>
<edition>
<date>2015-10-04T22:02:00Z</date>
</edition>
</editionStmt>
<publicationStmt>
<publisher>Prof. Dr. Michael Stolz</publisher>
<address>
<addrLine>UniversitÃ¤t Bern</addrLine>
<addrLine>Institut fÃ¼r Germanistik</addrLine>
<addrLine>Laenggass-Str. 49</addrLine>
<addrLine>CH-3000 Bern 9</addrLine>
</address>
</publicationStmt>
<sourceDesc>
<p>Converted from a Word document </p>
</sourceDesc>
</fileDesc>
<encodingDesc>
<appInfo>
<application ident="DHCONVALIDATOR" version="1.17">
<label>DHConvalidator</label>
</application>
</appInfo>
</encodingDesc>
<profileDesc>
<textClass>
<keywords n="category" scheme="ConfTool">
<term>Poster</term>
</keywords>
<keywords n="subcategory" scheme="ConfTool">
<term/>
</keywords>
<keywords n="keywords" scheme="ConfTool">
<term>Markdown</term>
<term>responsive webdesign</term>
<term>mean</term>
<term>open source</term>
</keywords>
<keywords n="topics" scheme="ConfTool">
<term>Gestaltung</term>
<term>Annotieren</term>
<term>Bearbeitung</term>
<term>Archivierung</term>
<term>Schreiben</term>
<term>Veröffentlichung</term>
<term>Kollaboration</term>
<term>Organisation</term>
</keywords>
</textClass>
</profileDesc>
</teiHeader>
<text>
<body>
<p>Oft kommen Fachwissenschaftler(innen) in die Lage, Texte für zahlreiche verschiedene digitale Formate (Blogs, Präsentationen, E-LeraningPlattformen) zu erzeugen. Sie stehen dabei vor der Wahl, Texte immer wieder neu einzupassen oder sie in Dateiformaten zur Verfügung zu stellen, die strenggenommen zweckentfremdet werden. Powerpoint-Präsentationen sind als begleitendes Element zu einer Vorlesung gedacht und nicht als Lernunterlagen, eine PDF-Datei soll im ursprünglichen Sinne eine Druckvorstufe sein, dementsprechend sind sowohl Usability als auch Lesbarkeit auf kleineren Bildschirmen meistens mangelhaft. HTML5 Dateien kennen diese Probleme nicht. Sie sind gewissermaßen digitale Rohdaten, die ohne zusätzliche Software von jedem modernen Browser interpretiert und dargestellt werden können. In HTML zu schreiben ist jedoch unkomfortabel und erfordert Kenntnisse. maus setzt genau an dieser Stelle an und bietet eine leicht nutzbare Entwicklungsumgebung, die reichhaltige HTML5-Dokumente exportieren kann. Dank der Trennung von Inhalt und Formatierung können dabei alle mit maus erzeugten Dokumente in verschiedenen Kontexten wiederverwendet werden. Daher wird maus vom Mainzer Zentrum für Digitalität in den Geistes- und Kulturwissenschaften (mainzed) aktuell auch besonders mit Blick auf die Erzeugung nachhaltiger, offener digitaler Lehrmaterialien (OER) weiterentwickelt.</p>
<p>maus ist eine neu entwickelte Webanwendung. Sie besteht aus einem Editor, indem mit einfachem Markdown Texte strukturiert und semantisch angereichert werden. Diese Texte werden in einem weiteren Schritt in HTML5 überführt und können automatisiert mit CSS-Templates verknüpft werden. Die vereinfachte Auszeichnungssprache Markdown fungiert somit als technische Brücke. Die Markdown-Syntax ist leicht zu erlernen und belässt Inhalte in lesbarer Form – somit bleiben die Daten trotz Auszeichnungen übersichtlich und klar. Tatsächlich nutzt Markdown einfache Auszeichnungselemente, um komplexe Strukturen im HTML zu generieren. Die erstellten Dokumente können später als HTML-Dateien exportiert werden. Der Editor unterstützt Syntax-Highlightning und eine Vorschau des Dokuments. Er ist ansonsten bewusst einfach und schlank gehalten. maus unterscheidet sich damit auch von der Usability erheblich von den üblichen CMS-Systemen. Dennoch bietet auch maus eine Verwaltung von Nutzer(inne)n und Nutzergruppen. Weiterhin besteht die Möglichkeit,  private Dokumente zu erstellen oder Inhalte mit anderen Nutzern zu teilen. Ebenso ist das Zurücksetzen auf frühere Versionen eines Dokuments möglich.</p>
<p>Die Entwicklung ist aber noch einen Schritt weitergegangen, denn oftmals reichen die durch Markdown unterstützen Auszeichnungselemente nicht aus. Hierzu zählen beispielsweise das automatische Generieren von Inhalts- und Quellenverzeichnissen, komplexen Bildunterschriften oder dynamische Begriffserläuterungen. Um die hierfür notwendigen komplexen HTML-Strukturen automatisiert zu generieren, wurden neue Auszeichnungselemente eingeführt. Hierdurch können die Markdown Dokumente u. a. mit semantischen Elementen angereichert werden. Beispielsweise wird durch die Auszeichnung: {definition: mainzed} ein HTML-Element erzeugt, das später im HTML-Dokument bei eine Erklärung des Begriffes ‘mainzed’ einblendet sobald sich der Cursor über dem Element befindet. Genauso kann maus aber auch Markdown-Dokumente ausgeben und hierbei die Erweiterungen entfallen lassen. Die Erweiterungen des Markdown sind also Optionen, die die Dokumente nicht korrumpieren. </p>
<p>Die Stärke von maus liegt in der Möglichkeit, erstellte Bausteine je nach Anwendungszweck zu passgenauen Medien zusammensetzen zu können. Ihre Darstellung lässt sich mit Hilfe unterschiedlicher Templates (siehe Templates) ebenfalls ändern. Mit Hilfe von maus lassen sich somit aus den selben digitalen Rohdaten problemlos Lesedokumente, Präsentationen oder Websites entwickeln. Die Arbeitsweise ist dabei grundsätzlich auf Nachhaltigkeit angelegt, weil Inhalt und Gestaltung getrennt bleiben. Es ist sehr einfach möglich, einmal erstellte Inhalte zu einem späteren Zeitpunkt in anderer Form wiederzuverwenden.</p>
<p>Bei der Software Architektur handelt es sich um einen MEAN Stack, einem Paket an freier Open-Source-Software zur Entwicklung von dynamischen Webanwendungen. Es besteht aus MongoDB, Express, AngularJS und Node.js. Weiterhin wird CodeMirror genutzt, ein JavaScript basierender Texteditor, der die Hervorhebung von Markdown-Auszeichnungselementen unterstützt. Dieser wurde erweitert, um auch die neu erzeugten Elemente hervorzuheben. Der Markdown parser und compiler marked wird zum Konvertieren der Markdown- in HTML-Dokumente verwendet. maus selbst ist, wie seine einzelnen Komponenten als Open-Source-Projekt auf GitHub (
                <ref target="https://github.com/mainzed/maus">https://github.com/mainzed/maus</ref>) freigegeben und kann somit frei genutzt und weiterentwickelt werden. 
            </p>
<p>maus wird bereits in Projekten des mainzed eingesetzt, um beispielsweise Lehrmaterialien für die Lernplattform OpenOLAT oder Inhalte für den mainzed-Jahresbericht durch Fachwissenschaftler(innen) erstellen zu lassen. </p>
<p>Im Fokus der Weiterentwicklung stehen derzeit die vereinfachte Erweiterbarkeit der Anwendung durch erfahrene Nutzer(innen). Diese sollen in der Lage sein, eigene Layouts und Anreicherungselemente anzulegen, um die momentan verfügbaren Vorlagen zu erweitern. Denkbar wären Layouts für wissenschaftliche Poster, Paper, Präsentationen und auch Printmedien.</p>
</body>
</text>
</TEI>